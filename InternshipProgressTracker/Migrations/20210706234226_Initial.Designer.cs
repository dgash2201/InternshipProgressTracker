// <auto-generated />
using System;
using InternshipProgressTracker;
using InternshipProgressTracker.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InternshipProgressTracker.Migrations
{
    [DbContext(typeof(InternshipProgressTrackerDbContext))]
    [Migration("20210706234226_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InternshipProgressTracker.Entities.InternshipStream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InternshipStreams");
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.Mentor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InternshipStreamId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InternshipStreamId");

                    b.HasIndex("UserId");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentGrade")
                        .HasColumnType("int");

                    b.Property<int>("InternshipStreamId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InternshipStreamId");

                    b.HasIndex("UserId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.StudentStudyPlanProgress", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("StudyPlanEntryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinishTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("GradingMentorId")
                        .HasColumnType("int");

                    b.Property<int?>("MentorId")
                        .HasColumnType("int");

                    b.Property<string>("MentorNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentNotes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId", "StudyPlanEntryId");

                    b.HasIndex("MentorId");

                    b.HasIndex("StudyPlanEntryId");

                    b.ToTable("StudentStudyPlanProgresses");
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.StudyPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InternshipStreamId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InternshipStreamId");

                    b.ToTable("StudyPlans");
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.StudyPlanEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudyPlanId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudyPlanId");

                    b.ToTable("StudyPlanEntries");
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.Mentor", b =>
                {
                    b.HasOne("InternshipProgressTracker.Entities.InternshipStream", null)
                        .WithMany("Mentors")
                        .HasForeignKey("InternshipStreamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternshipProgressTracker.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.Student", b =>
                {
                    b.HasOne("InternshipProgressTracker.Entities.InternshipStream", null)
                        .WithMany("Students")
                        .HasForeignKey("InternshipStreamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternshipProgressTracker.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.StudentStudyPlanProgress", b =>
                {
                    b.HasOne("InternshipProgressTracker.Entities.Mentor", null)
                        .WithMany("StudentStudyPlanProgresses")
                        .HasForeignKey("MentorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("InternshipProgressTracker.Entities.Student", null)
                        .WithMany("StudyPlanProgresses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("InternshipProgressTracker.Entities.StudyPlanEntry", null)
                        .WithMany("StudentsProgresses")
                        .HasForeignKey("StudyPlanEntryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.StudyPlan", b =>
                {
                    b.HasOne("InternshipProgressTracker.Entities.InternshipStream", null)
                        .WithMany("StudyPlans")
                        .HasForeignKey("InternshipStreamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.StudyPlanEntry", b =>
                {
                    b.HasOne("InternshipProgressTracker.Entities.StudyPlan", null)
                        .WithMany("Entries")
                        .HasForeignKey("StudyPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.InternshipStream", b =>
                {
                    b.Navigation("Mentors");

                    b.Navigation("Students");

                    b.Navigation("StudyPlans");
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.Mentor", b =>
                {
                    b.Navigation("StudentStudyPlanProgresses");
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.Student", b =>
                {
                    b.Navigation("StudyPlanProgresses");
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.StudyPlan", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("InternshipProgressTracker.Entities.StudyPlanEntry", b =>
                {
                    b.Navigation("StudentsProgresses");
                });
#pragma warning restore 612, 618
        }
    }
}
